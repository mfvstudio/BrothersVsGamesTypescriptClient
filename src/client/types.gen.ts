// This file is auto-generated by @hey-api/openapi-ts

export type HealthCheck = {
    message: string;
};

export type PostGame = {
    title: string;
    description: string;
    imageCoverUrl?: string;
    tags: Array<string>;
};

export type UpdateGame = {
    title?: string;
    description?: string;
    tags?: Array<string>;
};

export type PlayerCreate = {
    username: string;
    password: string;
    email: string;
    birthdate: number;
};

export type PlayerLogin = {
    email: string;
    password: string;
};

export type ApiResponse = {
    code?: number;
    type?: string;
    message?: string;
};

export type _Error = {
    code: string;
    message: string;
};

export type SearchRequest = {
    uid?: string;
    lastKey?: string;
    limit?: number;
    tags?: Array<string>;
};

export type SearchResponse = {
    games: Array<GameAsset>;
    count: number;
    lastKey?: string;
};

export type GameAsset = {
    title: string;
    description: string;
    imageCoverUrl: string;
    storageUrl: string;
    playCount: number;
    tags: Array<string>;
    topTenScores: {
        [key: string]: unknown;
    };
    sortKey: string;
    uid: string;
};

export type PlaySessionEntry = {
    username: string;
    score: number;
    completionTime: number;
};

export type SearchRequest2 = SearchRequest;

export type PlayerCreate2 = PlayerCreate;

export type PostGame2 = PostGame;

export type HealthData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/health';
};

export type HealthErrors = {
    /**
     * Invalid Request
     */
    400: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Unexpected error
     */
    default: _Error;
};

export type HealthError = HealthErrors[keyof HealthErrors];

export type HealthResponses = {
    /**
     * Success
     */
    200: HealthCheck;
};

export type HealthResponse = HealthResponses[keyof HealthResponses];

export type CreateAccountData = {
    /**
     * Create a new player account.
     */
    body: PlayerCreate;
    path?: never;
    query?: never;
    url: '/players';
};

export type CreateAccountErrors = {
    /**
     * Invalid Request
     */
    400: unknown;
    /**
     * Forbidden
     */
    403: unknown;
    /**
     * Unexpected error
     */
    default: _Error;
};

export type CreateAccountError = CreateAccountErrors[keyof CreateAccountErrors];

export type CreateAccountResponses = {
    /**
     * Succesful operation
     */
    201: ApiResponse;
};

export type CreateAccountResponse = CreateAccountResponses[keyof CreateAccountResponses];

export type LoginPlayerData = {
    /**
     * Player Login
     */
    body: PlayerLogin;
    path?: never;
    query?: never;
    url: '/players/login';
};

export type LoginPlayerErrors = {
    /**
     * Bad Request
     */
    400: ApiResponse;
    /**
     * Unexpected error
     */
    default: _Error;
};

export type LoginPlayerError = LoginPlayerErrors[keyof LoginPlayerErrors];

export type LoginPlayerResponses = {
    /**
     * ok
     */
    200: ApiResponse;
};

export type LoginPlayerResponse = LoginPlayerResponses[keyof LoginPlayerResponses];

export type LogoutPlayerData = {
    body?: never;
    path: {
        uid: string;
    };
    query?: never;
    url: '/players/{uid}/logout';
};

export type LogoutPlayerErrors = {
    /**
     * Bad Request
     */
    400: ApiResponse;
    /**
     * Unexpected error
     */
    default: _Error;
};

export type LogoutPlayerError = LogoutPlayerErrors[keyof LogoutPlayerErrors];

export type LogoutPlayerResponses = {
    /**
     * No Content
     */
    204: void;
};

export type LogoutPlayerResponse = LogoutPlayerResponses[keyof LogoutPlayerResponses];

export type AddGameData = {
    /**
     * request object for uploading a game
     */
    body: PostGame;
    path?: never;
    query?: never;
    url: '/games';
};

export type AddGameErrors = {
    /**
     * Unauthorized
     */
    401: ApiResponse;
    /**
     * Unexpected error
     */
    default: _Error;
};

export type AddGameError = AddGameErrors[keyof AddGameErrors];

export type AddGameResponses = {
    /**
     * Ok
     */
    200: ApiResponse;
};

export type AddGameResponse = AddGameResponses[keyof AddGameResponses];

export type DeleteGameData = {
    body?: never;
    path: {
        uid: string;
    };
    query?: never;
    url: '/games/{uid}';
};

export type DeleteGameErrors = {
    /**
     * Unauthorized
     */
    401: ApiResponse;
    /**
     * Unexpected error
     */
    default: _Error;
};

export type DeleteGameError = DeleteGameErrors[keyof DeleteGameErrors];

export type DeleteGameResponses = {
    /**
     * Ok
     */
    200: ApiResponse;
};

export type DeleteGameResponse = DeleteGameResponses[keyof DeleteGameResponses];

export type UpdateGameData = {
    /**
     * update game object
     */
    body: UpdateGame;
    path: {
        uid: string;
    };
    query?: never;
    url: '/games/{uid}';
};

export type UpdateGameErrors = {
    /**
     * Unauthorized
     */
    401: ApiResponse;
    /**
     * Unexpected error
     */
    default: _Error;
};

export type UpdateGameError = UpdateGameErrors[keyof UpdateGameErrors];

export type UpdateGameResponses = {
    /**
     * Ok
     */
    200: ApiResponse;
};

export type UpdateGameResponse = UpdateGameResponses[keyof UpdateGameResponses];

export type SearchGamesData = {
    /**
     * Search Request body
     */
    body: SearchRequest;
    path?: never;
    query?: never;
    url: '/search/games';
};

export type SearchGamesErrors = {
    /**
     * Unauthorized
     */
    401: ApiResponse;
    /**
     * Unexpected error
     */
    default: _Error;
};

export type SearchGamesError = SearchGamesErrors[keyof SearchGamesErrors];

export type SearchGamesResponses = {
    /**
     * Ok
     */
    200: SearchResponse;
};

export type SearchGamesResponse = SearchGamesResponses[keyof SearchGamesResponses];

export type SearchPlayersData = {
    /**
     * Search Request body
     */
    body?: SearchRequest;
    path?: never;
    query?: never;
    url: '/search/players';
};

export type SearchPlayersErrors = {
    /**
     * Unauthorized
     */
    401: ApiResponse;
    /**
     * Unexpected error
     */
    default: _Error;
};

export type SearchPlayersError = SearchPlayersErrors[keyof SearchPlayersErrors];

export type SearchPlayersResponses = {
    /**
     * Ok
     */
    200: SearchResponse;
};

export type SearchPlayersResponse = SearchPlayersResponses[keyof SearchPlayersResponses];

export type ClientOptions = {
    baseUrl: 'localhost:8080/v0' | (string & {});
};